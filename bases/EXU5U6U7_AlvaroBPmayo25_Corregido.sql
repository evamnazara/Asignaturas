USE COCINA25

-- FORMULAS EDAD:
SELECT 
	-- formula 1, si solo se quieren comprar los años y no mostrarlos no hace falta hacer el floor
	FLOOR(DATEDIFF(DAY,DATA_NACEMENTO,GETDATE())/365.25) AS [FORMULA EDAD 1],
	
	-- formula 2 más exacta
	DATEDIFF(YEAR,DATA_NACEMENTO,GETDATE()) 
	- CASE WHEN DATEADD(YEAR,DATEDIFF(YEAR,DATA_NACEMENTO,GETDATE()),DATA_NACEMENTO) > GETDATE()
		THEN 1 
		ELSE 0 
	 END AS [FORMULA EDAD 2]
	
FROM PERSONAL
GO


-- 1.

----- MULTITABLA ------------------------------------------------------------------------------------------------------------------
SELECT R.NOME, 
	'('+LEFT(TELEFONO,3)+')'+SUBSTRING(TELEFONO,4,3)+'.'+SUBSTRING(TELEFONO,7,3) AS TELEFONO,
	DATEDIFF(MONTH,DATAINAGURACION,GETDATE()) AS [TIEMPO EN MESES],
	P.NOME+' '+APELIDO1+' '+ISNULL(APELIDO2,'') AS NOMBRE

FROM RESTAURANTE R
	INNER JOIN PERSONAL P ON R.COD_COCINERO = P.CODIGO
	INNER JOIN COCINERO C ON C.CODIGO = P.CODIGO
	LEFT JOIN LIBRO L ON P.CODIGO = L.COD_COCINERO
	
WHERE 
	L.CODIGO IS NULL 
	AND DATEDIFF(DAY,DATA_EJERCER,GETDATE())/365.25 >= 10
ORDER BY LEN(R.NOME) DESC
GO	
	
----- SUBCONSULTA ------------------------------------------------------------------------------------------------------------------
SELECT R.NOME,
	'('+LEFT(R.TELEFONO,3)+')'+SUBSTRING(R.TELEFONO,4,3)+'.'+SUBSTRING(R.TELEFONO,7,3)  AS Telefono, 
	DATEDIFF( MONTH,R.DATAINAGURACION,GETDATE()) AS MesesDesdeInauguracion, P.NOME+' '+P.APELIDO1+' '+ISNULL(P.APELIDO2,'') as NombreCompleto
FROM RESTAURANTE R
	INNER JOIN COCINERO C ON R.COD_COCINERO = C.CODIGO
	INNER JOIN PERSONAL P ON C.CODIGO = P.CODIGO
	LEFT JOIN LIBRO L ON L.COD_COCINERO = C.CODIGO
WHERE L.COD_COCINERO IS NULL 
	AND DATEDIFF(YEAR,DATA_EJERCER,GETDATE()) 
	- CASE WHEN DATEADD(YEAR,DATEDIFF(YEAR,DATA_EJERCER,GETDATE()),DATA_EJERCER) > GETDATE()
	THEN 1 ELSE 0 END >= 10
ORDER BY LEN(R.NOME) DESC
GO

--##################################################################################################################################
-- 2.

----- MULTITABLA ------------------------------------------------------------------------------------------------------------------

SP_HELP PROVINCIA  -->> PRO.CODIGO NUMERIC LENGTH 9
GO

SELECT 
	CAST(PRO.CODIGO AS VARCHAR(9))+'-'+PRO.NOME AS PROVINCIA, 
	COUNT(*) AS [NÚMEROS DE COCINERAS CHEF] 
FROM PROVINCIA PRO
	INNER JOIN PERSONAL P ON P.COD_PROVINCIA = PRO.CODIGO
	INNER JOIN CHEF CH ON CH.CODIGO = P.CODIGO

WHERE P.SEXO = 'M'
	AND YEAR(DATA_NACEMENTO) BETWEEN 1960 AND 2000

GROUP BY PRO.CODIGO, PRO.NOME

HAVING COUNT(*) > 1

ORDER BY [NÚMEROS DE COCINERAS CHEF] DESC, PRO.NOME ASC
GO

----- SUBCONSULTA ------------------------------------------------------------------------------------------------------------------

SELECT 
	CAST(PR.CODIGO AS VARCHAR(9))+'-'+PR.NOME AS PROVINCIA, 
	(SELECT COUNT(*) 
	 FROM PERSONAL P
	 WHERE P.SEXO = 'M'
		AND YEAR(P.DATA_NACEMENTO) BETWEEN 1960 AND 2000
		AND P.COD_PROVINCIA = PR.CODIGO
		AND EXISTS(SELECT 1 FROM CHEF CH WHERE CH.CODIGO = P.CODIGO )
	)AS [NUMERO DE COCINERAS CHEF] 
FROM PROVINCIA PR

WHERE
	(SELECT COUNT(*) 
	 FROM PERSONAL P
	 WHERE P.SEXO = 'M'
		AND YEAR(P.DATA_NACEMENTO) BETWEEN 1960 AND 2000
		AND P.COD_PROVINCIA = PR.CODIGO
		AND EXISTS(SELECT 1 FROM CHEF CH WHERE CH.CODIGO = P.CODIGO )
	) > 1
		
ORDER BY [NUMERO DE COCINERAS CHEF] DESC ,PR.NOME ASC


--##################################################################################################################################
-- 3.

----- MULTITABLA ------------------------------------------------------------------------------------------------------------------

IF OBJECT_ID('copiaLIBRO') IS NOT NULL
	DROP TABLE copiaLIBRO	

SELECT * INTO copiaLIBRO FROM LIBRO

SELECT * FROM LIBRO

DECLARE @avgPVP FLOAT
SELECT @avgPVP = AVG(PVP_REFERENCIA) FROM LIBRO

UPDATE copiaLIBRO
SET PVP_REFERENCIA = PVP_REFERENCIA 
	* CASE WHEN PVP_REFERENCIA > @avgPVP THEN 0.90 ELSE 0.95 END
FROM copiaLIBRO CL

WHERE CL.COD_COCINERO IN (
	SELECT TOP 1 WITH TIES 
		C.CODIGO
	FROM COCINERO C 
		INNER JOIN RECETA R ON R.COD_COCINERO = C.CODIGO
	GROUP BY C.CODIGO
	ORDER BY COUNT(*) DESC
)


SELECT CL.CODIGO, CL.TITULO, CL.COD_COCINERO, CL.PVP_REFERENCIA, L.PVP_REFERENCIA AS OLD_VALUE
FROM copiaLIBRO CL 
	INNER JOIN LIBRO L ON L.CODIGO = CL.CODIGO
WHERE CL.COD_COCINERO IN(4,5,10)
ORDER BY CL.COD_COCINERO

--##################################################################################################################################
-- 4.


SELECT DISTINCT
	P.NOME+' '+P.APELIDO1+' '+ISNULL(P.APELIDO2,'') AS [AUXILIAR COCINA],
	CASE WHEN M.NOME IS NULL 
		THEN 'Sin maestro'
		ELSE M.NOME+' '+M.APELIDO1+' '+ISNULL(M.APELIDO2,'')
	END AS MAESTRO,
	P.EMAIL
		
FROM AUXILIARCOCINA AX
	INNER JOIN PERSONAL P ON P.CODIGO = AX.CODIGO
	LEFT JOIN PERSONAL M ON M.CODIGO =P.CODCOCINEROMAESTRO
	INNER JOIN TAREA T ON T.CODIGO = AX.TAREA

WHERE T.TIPO LIKE '%limpieza%'
	AND P.EMAIL NOT LIKE '%@gmail.com%'



--##################################################################################################################################
-- 5.

----- MULTITABLA ------------------------------------------------------------------------------------------------------------------

SELECT DISTINCT
	P.CODIGO,
	CASE 
		WHEN CH.CODIGO IS NOT NULL THEN '(CHEF '+CH.CLASE+')'
		WHEN C.CODIGO IS NOT NULL THEN
			CASE WHEN P.SEXO = 'M' THEN '(COCINERA)' ELSE '(COCINERO)' END
		ELSE '(AUXILIAR DE COCINA)' 
	END	+' '+P.NOME+' '+P.APELIDO1+' '+ISNULL(P.APELIDO2,'') AS [NombreCompleto],
	FLOOR(DATEDIFF(DAY,P.DATA_NACEMENTO,GETDATE())/365.25) AS Edad,
	COALESCE(TELEFONOMOVIL,TELEFONOFIJO,EMAIL,'') AS CONTACTO,
	CAST(DAY(DATA_NACEMENTO) AS VARCHAR(2))+' DE '+UPPER( DATENAME(MONTH,DATA_NACEMENTO)) AS [FECHA CUMPLEAÑOS]
	
FROM PERSONAL P
	LEFT JOIN CHEF CH ON CH.CODIGO = P.CODIGO
	LEFT JOIN COCINERO C ON C.CODIGO = P.CODIGO
	LEFT JOIN AUXILIARCOCINA AX ON AX.CODIGO = P.CODIGO
	
WHERE FLOOR(DATEDIFF(DAY,P.DATA_NACEMENTO,GETDATE())/365.25) BETWEEN 30 AND 40
ORDER BY Edad DESC


----- UNION ------------------------------------------------------------------------------------------------------------------

SELECT 
	CODIGO,NOMBRE,
	DATEDIFF(YEAR,DATA_NACEMENTO,GETDATE()) 
	- CASE WHEN DATEADD(YEAR,DATEDIFF(YEAR,DATA_NACEMENTO,GETDATE()),DATA_NACEMENTO) > GETDATE()
	THEN 1 ELSE 0 END AS EDAD,
	COALESCE(TELEFONOMOVIL,TELEFONOFIJO,EMAIL,'') AS CONTACTO,
	CAST(DAY(DATA_NACEMENTO) AS VARCHAR(2))+' DE '+UPPER( DATENAME(MONTH,DATA_NACEMENTO)) AS [FECHA CUMPLEAÑOS]
FROM (SELECT 
		P.CODIGO, 
		CASE WHEN SEXO = 'M' THEN '(COCINERA)' ELSE '(COCINERO)'END+' '
		+P.NOME+' '+P.APELIDO1+' '+ISNULL(P.APELIDO2,'') AS NOMBRE,
		DATA_NACEMENTO,TELEFONOMOVIL,TELEFONOFIJO,EMAIL
	 FROM PERSONAL P INNER JOIN COCINERO C ON P.CODIGO = C.CODIGO
 	 WHERE P.CODIGO NOT IN (SELECT CH.CODIGO FROM CHEF CH)
	
UNION
	SELECT P.CODIGO,'(AUXILIAR COCINA) '+P.NOME+' '+P.APELIDO1+' '+ISNULL(P.APELIDO2,'') as NOMBRE,
		DATA_NACEMENTO,TELEFONOMOVIL,TELEFONOFIJO,EMAIL
	FROM PERSONAL P INNER JOIN AUXILIARCOCINA AUX ON P.CODIGO = AUX.CODIGO
	
UNION
	SELECT P.CODIGO,'(CHEF '+CH.CLASE+') '+P.NOME+' '+P.APELIDO1+' '+ISNULL(P.APELIDO2,'') as NOMBRE,
		DATA_NACEMENTO,TELEFONOMOVIL,TELEFONOFIJO,EMAIL
	FROM PERSONAL P INNER JOIN CHEF CH ON P.CODIGO = CH.CODIGO

) AS TABLA
WHERE DATEDIFF(YEAR,DATA_NACEMENTO,GETDATE()) 
	- CASE WHEN DATEADD(YEAR,DATEDIFF(YEAR,DATA_NACEMENTO,GETDATE()),DATA_NACEMENTO) > GETDATE()
	THEN 1 ELSE 0 END BETWEEN 30 AND 40
ORDER BY EDAD DESC


--##################################################################################################################################
-- 6.

IF OBJECT_ID('RecetaIngredientesGrupo') IS NOT NULL
	DROP TABLE RecetaIngredientesGrupo

SELECT 
	R.NOME, R.TEMPO, 
	(SELECT COUNT(*) FROM RECETA_INGREDIENTE WHERE COD_RECETA = R.CODIGO)AS numIngredientes 
INTO RecetaIngredientesGrupo
FROM RECETA R
WHERE R.TEMPO > (
	SELECT AVG(TEMPO) 
	FROM RECETA R2 
	WHERE R2.COD_GRUPO = R.COD_GRUPO
)
ORDER BY numIngredientes DESC


--SELECT * FROM RecetaIngredientesGrupo ORDER BY TEMPO DESC


-- CONSULTA ANTES DE BORRAR
SELECT * FROM RecetaIngredientesGrupo
WHERE TEMPO IN (
	SELECT DISTINCT TOP 4 TEMPO FROM RecetaIngredientesGrupo ORDER BY TEMPO DESC
)

DELETE FROM RecetaIngredientesGrupo
WHERE TEMPO IN (
	SELECT DISTINCT TOP 4 TEMPO FROM RecetaIngredientesGrupo ORDER BY TEMPO DESC
)


SELECT * FROM RecetaIngredientesGrupo ORDER BY TEMPO DESC


--##################################################################################################################################
-- 7.

SELECT * FROM PERSONAL
SP_HELP PERSONAL -->> CODIGO NO ES AUTOINCREMENTADO
GO

SELECT * from RECETA
SP_HELP RECETA -->> CODIGO NO ES AUTOINCREMENTADO
GO


DELETE FROM PERSONAL
WHERE APODO = 'Barquense' AND NOME = 'MANOLITA' AND SEXO = 'M'

BEGIN TRANSACTION
BEGIN TRY

	DECLARE @idManolita INT, @idRecetaManolita INT, @fechaNac DATE
	SELECT @idManolita = MAX(CODIGO)+1 FROM PERSONAL
	SELECT @idRecetaManolita = MAX(CODIGO)+1 FROM RECETA
	SELECT TOP 1 @fechaNac = DATEADD(MONTH,-2,DATA_NACEMENTO) FROM PERSONAL WHERE APODO = 'MARILO'
	
-- Manolita PERSONAL
	INSERT INTO PERSONAL (CODIGO,NOME,APELIDO1,APELIDO2,APODO,SEXO,LOCALIDADE,COD_PROVINCIA,DATA_NACEMENTO,CODCOCINEROMAESTRO,TELEFONOFIJO)
	VALUES(
		@idManolita, 'Manolita','Barco', 'Ramos', 'Barquense','M','Viana',
		(SELECT CODIGO FROM PROVINCIA WHERE NOME = 'OURENSE'),
		@fechaNac,
		(SELECT P.CODIGO FROM PERSONAL P INNER JOIN COCINERO C ON P.CODIGO = C.CODIGO WHERE P.APODO = 'ANITA'),
		'988666676'
	)
	PRINT('Manolita PERSONAL Finalizada')

-- Manolita COCINERO
	INSERT INTO COCINERO (CODIGO,TIPO,DATA_EJERCER)
	VALUES(@idManolita,'C',GETDATE())
	
	PRINT('Manolita COCINERO Finalizada')

-- Manolita CHEF
	INSERT INTO CHEF (CODIGO,CLASE)
	VALUES(@idManolita,'MANAGER')

	PRINT('Manolita CHEF Finalizada')


-- Manolita RESTAURANTE
	UPDATE RESTAURANTE
	SET 
		COD_COCINERO = @idManolita,
		NOME = 'Casa Manolita',
		DATAINAGURACION = DATEADD(WEEK,6,GETDATE()),
		LOCALIDADE = 'Pontevedra',
		PROVINCIA = (SELECT CODIGO FROM PROVINCIA WHERE NOME = 'PONTEVEDRA')
		
	WHERE NOME = 'Verrugita' OR NOME = 'Casa Manolita'

	PRINT('Manolita RESTAURANTE Finalizada')

-- Manolita RECETA
	INSERT INTO RECETA (CODIGO,NOME,COD_GRUPO,DIFICULTADE,TEMPO,ELABORACION,COD_COCINERO)
	VALUES( 
		(@idRecetaManolita),
		'Pudding de Manzana',
		(SELECT CODIGO FROM GRUPO WHERE NOME = 'POSTRES'),
		(SELECT DIFICULTADE FROM RECETA WHERE NOME = 'Tarta de Queso'),
		50,
		'Se añade...',
		@idManolita
	)
	
	PRINT('Manolita RECETA Finalizada')

-- Manolita RECETA_INGREDIENTE
	--SELECT * FROM  RECETA_INGREDIENTE
	
	INSERT INTO RECETA_INGREDIENTE (COD_RECETA, COD_INGREDIENTE, CANTIDAD, MEDIDA)
	SELECT @idRecetaManolita, COD_INGREDIENTE, CANTIDAD, MEDIDA  FROM RECETA_INGREDIENTE WHERE COD_RECETA = (SELECT CODIGO FROM RECETA WHERE NOME = 'Tarta de Manzana')

	--SELECT * FROM  RECETA_INGREDIENTE
	PRINT('Manolita RECETA_INGREDIENTE Finalizada')

	COMMIT TRANSACTION
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION
	PRINT('ERROR')
END CATCH
GO

SELECT * FROM PERSONAL WHERE CODIGO = 59
SELECT * FROM COCINERO WHERE CODIGO = 59
SELECT * FROM CHEF WHERE CODIGO = 59
SELECT * FROM RECETA WHERE CODIGO = 50
SELECT * FROM RESTAURANTE WHERE COD_COCINERO = 59
SELECT * FROM RECETA_INGREDIENTE WHERE COD_RECETA = 50